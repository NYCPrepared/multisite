// STARTER VARIABLES AND MIXINS


// COLORS

$navy: #247cc9;
$blue: #29abe2;
$teal: #00a99d;
$green: #22b573;
$lime: #8cc63f;
$yellow: #fbb03b;
$orange: #ff931e;
$red: #f15a24;

$black: #000;
$white: #fff;

// shades of beige -- HSB(43, 3, X)
$gray1: #1a1919;
$gray2: #333231;
$gray3: #4d4c4a;
$gray4: #757472;
$gray5: #999894;
$gray6: #b8b6b2;
$gray7: #d1cfcb;
$gray8: #e6e4df;
$gray9: #f5f3ed;
$gray0: #fffdf7;


// Tutorial: how to use color variables properly:
// http://sachagreif.com/sass-color-variables/

$anchor: $teal;
$headline-color: $gray1;
$text-color: $gray2;
$quiet-color: $gray6;
$hr-color: $gray6;


$image-border: 5px solid $white;


// LAYERS

$layer1: 1; // content
$layer2: 2; // hovers
$layer3: 3; // cloak
$layer4: 4; // lightbox
$layer5: 5; // lightbox content



// GRID (BOURBON NEAT) //
// so great! read the docs:
// neat.bourbon.io/docs/

$grid-columns: 16;
$max-width: 1200px;


// MIXINS 
// read the Bourbon docs for all kinds of well-tested mixins 
// check there before adding new ones
// http://bourbon.io/docs/


// RWD BREAKPOINTS 
// mobile first! so you only have to use floats etc in larger sizes
// set breakpoints where your content breaks, not particular devices

@mixin breakpoint($point) {
	@if $point == tiny {
		@media (min-width: 321px)  { @content; } 
	}
	@if $point == small {
		@media (min-width: 481px) { @content; }
	}
	@if $point == medium {
		@media (min-width: 769px) { @content; }
	}
	@if $point == large {
		@media (min-width: 1025px) { @content; }
	}
	@else if $point == xl {
		@media (min-width: 1200px) { @content; }
	}
}


// CLEARFIX

// for old markup w/clearfix class:
.clearfix:after {
    content: "";
    display: table;
    clear: both;
}

// for semantic markup, a la http://blog.teamtreehouse.com/a-better-clearfix-with-sass
%clearfix:after {
    content: "";
    display: table;
    clear: both;
}


// IMAGE FRAME

%image-border {
    border: 5px solid $white;
}



// NOTCHED LINE

@mixin notch($size, $border: $gray5, $fill: $gray9){
    position: relative;
    a:before,
    a:after {
        position: absolute;
        content: '';
        height: 0px;
        left: 50%;
        bottom: -1px;
        border-color: transparent;
    }
    a:before {
        border-bottom-color: $border;
        border-width: $size;
        margin-left: -$size;
    }
    a:after {
        border-bottom-color: $fill;
        border-width: $size - 1;
        margin-left: -$size + 1;
    }
}


// BUTTON THAT FLIPS BG/TEXT COLORS ON HOVER

@mixin flip-button($color){
    background: $color;
    border-color: $color;
    color: $white !important;
    &:hover,
    &:focus {
        background: $white;
        color: $color !important;
    }
}


// OVERFLOW FADES OUT

%overflow-fade {
    position: relative;
	&:after {
		content: "";
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 30px;
		@include linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1), $fallback: transparent);
	}
}


// STATES

.is-hidden {
	display: none;
}

.fullwidth { 
	width: 100%; 
}



// BROWSER ADJUSTMENTS

// standardize box model across browsers! IE8 and up. bit.ly/1eXrOej 
*, *:before, *:after {
    -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;
}


